<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee 
	http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:**/*application*.xml</param-value>
	</context-param>
	
	<!-- 配置一下Spring的编码过滤器 位置top -->
	<filter>
		<filter-name>spring2encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>spring2encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!--  （ CAS用户认证，票据验证 ）返回域名 -->
    <context-param>   
        <param-name>serverName</param-name>   
		<param-value>localhost:8081</param-value>   
    </context-param>   
    
    <!-- 单点退出 -->
    <filter>   
        <filter-name>CAS Single Sign Out Filter</filter-name>   
        <filter-class>   
            org.jasig.cas.client.session.SingleSignOutFilter    
        </filter-class>   
    </filter>   
    <filter-mapping>   
        <filter-name>CAS Single Sign Out Filter</filter-name>   
        <url-pattern>/*</url-pattern>   
    </filter-mapping>   
    <listener>   
        <listener-class>   
            org.jasig.cas.client.session.SingleSignOutHttpSessionListener    
        </listener-class>   
    </listener>   

	<!-- 用户身份认证 证书认证，数据库认证 ，电子卡认证 -->
	<filter>
	  <filter-name>CAS Authentication Filter</filter-name>
	  <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
	  <init-param>
		<param-name>casServerLoginUrl</param-name>
		<param-value>https://localhost:8443/cas/login</param-value>
	  </init-param>
	</filter>
	
	<!--  ticket 校验 -->
	<filter>
	  <filter-name>CAS Validation Filter</filter-name>
	  <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
	  <init-param>
		<param-name>casServerUrlPrefix</param-name>
		<param-value>https://localhost:8443/cas</param-value>
	  </init-param>
	</filter>

   <!-- 封装request getRemoteUser() -->
   <filter>
	  <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
	  <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
   </filter>
   
   <!-- 客户端jar包 获取登录名  org.jasig.cas.client.util.AssertionHolder  AssertionHolder.getAssertion().getPrincipal().getName()  -->
    <filter>
	  <filter-name>CAS Assertion Thread Local Filter</filter-name>
	  <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
    </filter>
    
    <filter-mapping>   
		<filter-name>CAS Authentication Filter</filter-name>   
		<url-pattern>/*</url-pattern>   
	</filter-mapping>   
	<filter-mapping>   
		<filter-name>CAS Validation Filter</filter-name>   
		<url-pattern>/*</url-pattern>   
	</filter-mapping>   
	<filter-mapping>   
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>   
		<url-pattern>/*</url-pattern>   
	</filter-mapping>   
	<filter-mapping>   
		<filter-name>CAS Assertion Thread Local Filter</filter-name>   
		<url-pattern>/*</url-pattern>   
	</filter-mapping>
	
	<!-- spring acegi 安全框架 -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>	
	<listener>
		<listener-class>
			org.springframework.security.ui.session.HttpSessionEventPublisher
		</listener-class>
	</listener>
		
	<listener>
		<listener-class>com.zxt.framework.cache.ZXTCacheListener</listener-class>
	</listener>	
	
	<filter>
		<filter-name>lazyLoadingFilter</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>lazyLoadingFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
<!-- Fck配置 -->
	<servlet>
		<servlet-name>Connector</servlet-name>
		<servlet-class>net.fckeditor.connector.ConnectorServlet</servlet-class>
		  
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value><!--启动服务时是否显示调试信息 -->
		</init-param>
		<init-param>
			<param-name>enabled</param-name>
			<param-value>true</param-value><!--是否开启上传文件功能 -->
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsFile</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsFile</param-name>
			<param-value>
				php|php3|php5|phtml|asp|aspx|ascx|jsp|cfm|cfc|pl|bat|exe|dll|reg|cgi
			</param-value>
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsImage</param-name>
			<param-value>jpg|gif|jpeg|png|bmp</param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsImage</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsFlash</param-name>
			<param-value>swf|fla</param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsFlash</param-name>
			<param-value></param-value>
		</init-param>

		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Connector</servlet-name>
		<url-pattern>
			/fckeditor/editor/filemanager/connectors/*
		</url-pattern>
	</servlet-mapping>
<!-- Fck配置 -->

	<!-- Struts2 -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<servlet>
		<servlet-name>dwr-invoker</servlet-name>
		<servlet-class>org.directwebremoting.spring.DwrSpringServlet</servlet-class>
		<init-param>
			<param-name>debug</param-name>
			<param-value>true</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>dwr-invoker</servlet-name>
		<url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
	
	<!-- upload -->
	  <servlet>
	    <servlet-name>UploadProAction</servlet-name>
	    <servlet-class>com.zxt.compplatform.formengine.upload.UploadProAction</servlet-class>
	  </servlet>
	    <servlet-mapping>
	    <servlet-name>UploadProAction</servlet-name>
	    <url-pattern>/upload/uploadProAction</url-pattern>
	  </servlet-mapping>
	<!-- upload -->
	
	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>
	<welcome-file-list>
		<welcome-file>pages/login.jsp</welcome-file>
	</welcome-file-list>
</web-app>
